<?xml version="1.0"?>
<project name="forum" default="build" basedir=".">
    <property name="env.name" value="dev"/>
    <echo message="----------------------------------------------------------------"/>
    <echo message="Loading build.properties for the environment ${env.name}"/>
    <echo message="----------------------------------------------------------------"/>

    <loadproperties srcFile="${basedir}/buildprofiles/${env.name}/build.properties"/>

    <property name="src.dir" location="src/main"/>
    <property name="unit.test.dir" location="src/unit-tests"/>
    <property name="integration.test.dir" location="src/integration-tests"/>
    <property name="system.test.dir" location="src/system-tests"/>

    <property name="build.dir" location="build"/>
    <property name="compile.dir" location="${build.dir}/compile"/>
    <property name="report.dir" location="${build.dir}/report"/>
    <property name="dist.dir" location="${build.dir}/dist"/>
    <property name="bootstrap.ant.jar.dir" location="${basedir}/bootstrap/ant"/>
    <property name="buildtime.jar.dir" location="${basedir}/lib/buildtime/jar"/>
    <property name="runtime.jar.dir" location="${basedir}/lib/runtime/jar"/>
    <property name="jetty.jar.dir" location="${basedir}/lib/jetty/jar"/>

    <property name="test.report.dir" location="${report.dir}/test"/>
    <property name="data.dir" location="${basedir}/data"/>

    <!-- Cobertura -->
    <property name="build.instrumented.dir" value="${build.dir}/instrumented-classes"/>
    <property name="coberturaReports.dir" value="${build.dir}/coberturaReports"/>

    <mkdir dir="${buildtime.jar.dir}"/>
    <mkdir dir="${runtime.jar.dir}"/>
    <mkdir dir="${jetty.jar.dir}"/>

    <import file="dbbuild.xml"/>

    <path id="common-classpath">
        <pathelement location="${unit.test.dir}/resources"/>
        <pathelement location="${src.dir}/resources"/>
        <pathelement location="${src.dir}/deployment/env/dev"/>
        <fileset dir="${compile.dir}"/>
        <fileset dir="${runtime.jar.dir}"/>
        <fileset dir="${buildtime.jar.dir}"/>
        <fileset dir="${jetty.jar.dir}" excludes="ant-*.jar"/>
    </path>

    <path id="system-classpath">
        <path refid="common-classpath"/>
    </path>

    <!-- Cobertura -->
    <path id="cobertura-classpath">
        <pathelement location="${unit.test.dir}/resources"/>
        <pathelement location="${src.dir}/resources"/>
        <pathelement location="${src.dir}/deployment/env/dev"/>
        <fileset dir="${buildtime.jar.dir}" />
        <fileset dir="${jetty.jar.dir}" excludes="ant-*.jar"/>
    </path>

    <macrodef name="make-jar">
        <attribute name="srcdir"/>
        <attribute name="jarfile"/>
        <attribute name="classpath"/>
        <sequential>
            <mkdir dir="${compile.dir}/classes"/>
            <mkdir dir="${build.instrumented.dir}"/>
            <javac srcdir="@{srcdir}/java" destdir="${compile.dir}/classes" classpathref="@{classpath}"
                   includeantruntime="no" debug="yes"/>
            <jar jarfile="${compile.dir}/@{jarfile}" basedir="${compile.dir}/classes">
                <fileset dir="@{srcdir}/java" excludes="**/*.java"/>
                <fileset dir="@{srcdir}/resources" excludes=".gitignore"/>
            </jar>
            <delete dir="${compile.dir}/classes"/>
        </sequential>
    </macrodef>

    <macrodef name="unit-test">
        <attribute name="testdir"/>
        <attribute name="classpath"/>
        <sequential>
            <mkdir dir="${test.report.dir}"/>
            <junit fork="yes" forkmode="once" failureproperty="unit.tests.failed" printsummary="yes" haltonfailure="on">
                <sysproperty key="net.sourceforge.cobertura.datafile"
                             file="${build.instrumented.dir}/cobertura.ser" />
                <classpath>
                    <fileset dir="${build.instrumented.dir}">
                        <include name="*.jar" />
                    </fileset>
                </classpath>
                <classpath refid="@{classpath}" />
                <formatter type="xml"/>
                <batchtest todir="${test.report.dir}">
                    <fileset dir="@{testdir}/java">
                        <include name="**/*Test.java"/>
                    </fileset>
                </batchtest>
            </junit>
        </sequential>
    </macrodef>

    <taskdef resource="org/apache/ivy/ant/antlib.xml">
        <classpath location="${bootstrap.ant.jar.dir}/ivy-2.1.0.jar"/>
    </taskdef>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath location="${bootstrap.ant.jar.dir}/ant-contrib-1.0b3.jar"/>
    </taskdef>

    <target name="fetch-libs" description="Fetch third-party libraries using ivy.">
        <property name="ivy.default.ivy.user.dir" value="${basedir}/../ivy"/>
        <configure/>
        <resolve/>
        <retrieve pattern="lib/[conf]/[type]/[artifact]-[revision].[ext]" sync="true"/>
    </target>

    <target name="build" depends="clean, make-war" description="Create WAR file."/>

    <target name="precommit" depends="clean, run-tests" description="Run this before committing changes."/>

    <target name="clean" description="Delete output directory.">
        <delete dir="${build.dir}"/>
    </target>

    <target name="make-jars" depends="fetch-libs">
        <make-jar srcdir="${src.dir}" jarfile="${ant.project.name}.jar" classpath="common-classpath"/>
        <make-jar srcdir="${unit.test.dir}" jarfile="${ant.project.name}-unit-tests.jar" classpath="common-classpath"/>
        <make-jar srcdir="${integration.test.dir}" jarfile="${ant.project.name}-int-tests.jar"
                  classpath="common-classpath"/>
        <make-jar srcdir="${system.test.dir}" jarfile="${ant.project.name}-sys-tests.jar" classpath="system-classpath"/>
    </target>

    <target name="run-tests"
            depends="run-unit-tests, run-integration-tests, run-system-tests, report-tests, check-failed-tests"
            description="Run all unit, integration and system tests."/>

    <target name="run-unit-tests" depends="make-jars">
        <unit-test testdir="${unit.test.dir}" classpath="common-classpath"/>
    </target>

    <target name="run-integration-tests" depends="make-jars">
        <unit-test testdir="${integration.test.dir}" classpath="common-classpath"/>
    </target>

    <target name="run-system-tests" depends="make-jars">
        <unit-test testdir="${system.test.dir}" classpath="system-classpath"/>
    </target>

    <target name="report-tests" if="unit.tests.failed">
        <junitreport todir="${test.report.dir}">
            <fileset dir="${test.report.dir}" includes="TEST-*.xml"/>
            <report todir="${test.report.dir}/html"/>
        </junitreport>
    </target>

    <target name="check-failed-tests" if="unit.tests.failed">
        <fail message="One or more tests failed. Please check the logs for more info."/>
    </target>

    <target name="build-number" unless="build.number">
        <property name="build.number" value="1"/>
    </target>

    <target name="setup-app-properties" depends="build-number">
        <mkdir dir="${dist.dir}/classes"/>
        <echo message="Creating app-version.properties with build.number=${build.number}"/>
        <echo message="build.number=${build.number}${line.separator}"
              file="${dist.dir}/classes/app-version.properties"/>
    </target>

    <target name="make-war" depends="make-jars,setup-app-properties">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/webapp"/>
        <war destfile="${dist.dir}/${ant.project.name}.war" webxml="${src.dir}/webapp/WEB-INF/web.xml">
            <classes dir="${dist.dir}/classes"/>
            <classes dir="${src.dir}/resources"/>
            <webinf dir="${src.dir}/deployment">
                <include name="applicationContext-*.xml"/>
            </webinf>
            <fileset dir="${src.dir}/webapp">
                <exclude name="**/applicationContext-properties.xml"/>
                <exclude name="**/web.xml"/>
                <exclude name="static/"/>
                <exclude name="src/"/>
            </fileset>
            <zipfileset prefix="${build.number}" dir="${dist.dir}/webapp"/>
            <zipfileset prefix="${build.number}" dir="${src.dir}/webapp">
                <exclude name="static/js/page/**/*.js"/>
                <include name="static/"/>
            </zipfileset>
            <lib dir="${compile.dir}" excludes="*-tests.jar"/>
            <lib dir="lib/runtime/jar"/>
        </war>
    </target>

    <target name="deploy" depends="make-war">
        <copy file="${dist.dir}/${ant.project.name}.war" todir="/usr/share/tomcat6/webapps"></copy>
    </target>

    <target name="make-zip" depends="make-war">
        <mkdir dir="${dist.dir}"/>
        <zip destfile="${dist.dir}/${ant.project.name}.zip">
            <fileset dir="${dist.dir}" includes="*.war"/>
            <fileset dir="${src.dir}/deployment/env"/>
        </zip>
        <checksum file="${dist.dir}/${ant.project.name}.zip"/>
    </target>

    <target name="run-jetty" depends="make-jars" description="Run application in Jetty.">
        <java classname="com.forum.jetty.WebServer" classpathref="system-classpath" fork="true"
              failonerror="true"/>
    </target>

    <target name="package-src" description="Create zip of the source code for distribution.">
        <mkdir dir="${dist.dir}"/>
        <zip basedir="${basedir}" destfile="${dist.dir}/${ant.project.name}-src.zip"/>
        <checksum file="${dist.dir}/${ant.project.name}-src.zip"/>
    </target>

    <target name="get-build-number" unless="build.number">
        <input message="Build number?" addproperty="build.number"/>
    </target>

    <!--target for cobertura-->
    <taskdef resource="tasks.properties" classpathref="cobertura-classpath" />

    <target name="run-coverage-rate" depends="check-cobertura, report-cobertura"
            description="Calculate the percentage of code accessed by tests." />

    <target name="init-cobertura" depends="clean-cobertura">
        <mkdir dir="${coberturaReports.dir}"/>
    </target>

    <target name="instrument-cobertura" depends="init-cobertura, make-jars">
        <cobertura-instrument todir="${build.instrumented.dir}"
                     datafile="${build.instrumented.dir}/cobertura.ser">
            <ignore regex="org.apache.log4j.*"/>

            <fileset dir="${compile.dir}">
                <include name="*.jar" />
                <exclude name="*-tests.jar" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="check-cobertura" depends="instrument-cobertura, run-tests">
        <cobertura-check datafile="${build.instrumented.dir}/cobertura.ser"
                         branchrate="0" totalbranchrate="0" totallinerate="0"/>
    </target>

    <target name="report-cobertura">
        <cobertura-report datafile="${build.instrumented.dir}/cobertura.ser"
                          destdir="${coberturaReports.dir}" srcdir="${src.dir}/java" />
    </target>

    <target name="clean-cobertura">
        <delete dir="${build.instrumented.dir}"/>
        <delete dir="${coberturaReports.dir}"/>
    </target>
    <!-- end of target for cobertura -->
</project>
